  $ ../../../../../install/default/bin/stanc --print-cpp gentest_mother1.stan

// Code generated by Stan version 2.18.0
#include <stan/model/model_header.hpp>
namespace gentest_mother1_model_model_namespace {
static int current_statement__;

using std::istream;
using std::string;
using std::stringstream;
using std::vector;
using stan::io::dump;
using stan::math::lgamma;
using stan::model::prob_grad;
using namespace stan::math;

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo(const T0__& n, std::ostream* pstream__) ;

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo(const T0__& n, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 13-13";
    if (n Equals 0) {
      current_statement__ = ""gentest_mother1.stan", line 13-13";
      return 1;
    } 
    current_statement__ = ""gentest_mother1.stan", line 14-14";
    return n Times foo(n Minus 1);
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__, typename T2__, typename T3__,
typename T4__>
std::vector<typename boost::math::tools::promote_args<T0__, T1__, T2__>::type>
sho(const T0__& t, const std::vector<T1__>& y,
    const std::vector<T2__>& theta, const std::vector<double>& x,
    const std::vector<int>& x_int, std::ostream* pstream__) ;

template <typename T0__, typename T1__, typename T2__, typename T3__,
typename T4__>
std::vector<typename boost::math::tools::promote_args<T0__, T1__, T2__>::type>
sho(const T0__& t, const std::vector<T1__>& y,
    const std::vector<T2__>& theta, const std::vector<double>& x,
    const std::vector<int>& x_int, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__,
          T2__,
          T3__,
          T4__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 29-29";
    std::vector<double> dydt;
    
    current_statement__ = ""gentest_mother1.stan", line 30-30";
    stan::model::rvalue(dydt,
        stan::model::cons_list(stan::model::index_uni(1),
        stan::model::nil_index_list()), "dydt"); = stan::model::rvalue(y,
                                                       stan::model::cons_list(stan::model::index_uni(2),
                                                       stan::model::nil_index_list()),
                                                       "y");;
    current_statement__ = ""gentest_mother1.stan", line 31-31";
    stan::model::rvalue(dydt,
        stan::model::cons_list(stan::model::index_uni(2),
        stan::model::nil_index_list()), "dydt"); = Minus(stan::model::rvalue(y,
                                                             stan::model::cons_list(stan::model::index_uni(1),
                                                             stan::model::nil_index_list()),
                                                             "y");) Minus 
    stan::model::rvalue(theta,
        stan::model::cons_list(stan::model::index_uni(1),
        stan::model::nil_index_list()), "theta"); Times stan::model::rvalue(y,
                                                            stan::model::cons_list(stan::model::index_uni(2),
                                                            stan::model::nil_index_list()),
                                                            "y");;
    current_statement__ = ""gentest_mother1.stan", line 32-32";
    return dydt;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <>
typename boost::math::tools::promote_args<>::type
foo_bar0(, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 36-36";
    return 0.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo_bar1(const T0__& x, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 40-40";
    return 1.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__>
typename boost::math::tools::promote_args<T0__, T1__>::type
foo_bar2(const T0__& x, const T1__& y, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 44-44";
    return 2.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__>
typename boost::math::tools::promote_args<T0__, T1__>::type
foo_lpmf(const T0__& y, const T1__& lambda, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 48-48";
    return 1.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__>
typename boost::math::tools::promote_args<T0__, T1__>::type
foo_lcdf(const T0__& y, const T1__& lambda, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 52-52";
    return 1.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__>
typename boost::math::tools::promote_args<T0__, T1__>::type
foo_lccdf(const T0__& y, const T1__& lambda, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 56-56";
    return 1.0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
void
unit_normal_lp(const T0__& u, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 60-60";
    target = target Plus normal_log(u, 0, 1);
    {
      
      current_statement__ = ""gentest_mother1.stan", line 61-61";
      target = target Plus uniform(u, Minus(100), 100);
    }
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo_1(const T0__& a, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 66-66";
    while (1) {
      break;
    }
    current_statement__ = ""gentest_mother1.stan", line 67-67";
    while (0) {
      continue;
    }
    current_statement__ = ""gentest_mother1.stan", line 70-70";
    for (size_t i = 1; i < 10; i++) break;
    
    current_statement__ = ""gentest_mother1.stan", line 71-71";
    for (size_t i = 1; i < 10; i++) continue;
    
    current_statement__ = ""gentest_mother1.stan", line 74-78";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 75-75";
        int b;
        
        current_statement__ = ""gentest_mother1.stan", line 76-76";
        b = 5;
        break;
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 81-85";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 82-84";
        if (0) {
          break;
        } else current_statement__ = ""gentest_mother1.stan", line 83-84";
        if (1) {
          break;
        } else break;
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 88-88";
    while (1) {
      current_statement__ = ""gentest_mother1.stan", line 88-88";
      while (0) {
        break;
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 91-93";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 92-92";
        for (size_t i = 1; i < 10; i++) break;
        
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 96-114";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 97-97";
        std::vector<std::vector<int>> vs;
        
        current_statement__ = ""gentest_mother1.stan", line 98-98";
        int z;
        
        current_statement__ = ""gentest_mother1.stan", line 99-102";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 100-100";
            z = 0;
            break;
          }
        
        current_statement__ = ""gentest_mother1.stan", line 103-106";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 104-104";
            z = 0;
            continue;
          }
        
        current_statement__ = ""gentest_mother1.stan", line 107-113";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 108-111";
            for (size_t vv = 0; vv < length(v); vv++)
              {
                current_statement__ = ""gentest_mother1.stan", line 109-109";
                z = 0;
                break;
              }
            
            current_statement__ = ""gentest_mother1.stan", line 112-112";
            z = 1;
          }
        
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 117-128";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 118-118";
        double z;
        
        current_statement__ = ""gentest_mother1.stan", line 119-119";
        Eigen::Matrix<double, -1, -1> vs;
        
        current_statement__ = ""gentest_mother1.stan", line 120-123";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 121-121";
            z = 0;
            break;
          }
        
        current_statement__ = ""gentest_mother1.stan", line 124-127";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 125-125";
            z = 3.1;
            continue;
          }
        
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 131-142";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 132-132";
        double z;
        
        current_statement__ = ""gentest_mother1.stan", line 133-133";
        Eigen::Matrix<double, -1, 1> vs;
        
        current_statement__ = ""gentest_mother1.stan", line 134-137";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 135-135";
            z = 0;
            break;
          }
        
        current_statement__ = ""gentest_mother1.stan", line 138-141";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 139-139";
            z = 3.2;
            continue;
          }
        
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 145-156";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 146-146";
        double z;
        
        current_statement__ = ""gentest_mother1.stan", line 147-147";
        Eigen::Matrix<double, 1, -1> vs;
        
        current_statement__ = ""gentest_mother1.stan", line 148-151";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 149-149";
            z = 0;
            break;
          }
        
        current_statement__ = ""gentest_mother1.stan", line 152-155";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 153-153";
            z = 3.3;
            continue;
          }
        
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 159-167";
    while (1) {
      {
        current_statement__ = ""gentest_mother1.stan", line 160-160";
        int b;
        
        current_statement__ = ""gentest_mother1.stan", line 161-161";
        b = 5;
        {
          current_statement__ = ""gentest_mother1.stan", line 163-163";
          int c;
          
          current_statement__ = ""gentest_mother1.stan", line 164-164";
          c = 6;
          break;
        }
      }
    }
    current_statement__ = ""gentest_mother1.stan", line 169-169";
    return 0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo_2(const T0__& a, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 173-173";
    std::vector<int> vs;
    
    current_statement__ = ""gentest_mother1.stan", line 174-174";
    int y;
    
    current_statement__ = ""gentest_mother1.stan", line 175-175";
    for (size_t v = 0; v < length(vs); v++)
      current_statement__ = ""gentest_mother1.stan", line 175-175";
      y = v;
    
    current_statement__ = ""gentest_mother1.stan", line 176-176";
    return 0;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__>
std::vector<typename boost::math::tools::promote_args<T0__, T1__>::type>
foo_3(const T0__& t, const T1__& n, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 180-180";
    return rep_array(t, n);
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
typename boost::math::tools::promote_args<T0__>::type
foo_lp(const T0__& x, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 184-184";
    return x Plus target;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__>
void
foo_4(const T0__& x, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 188-188";
    reject(""user-specified rejection"");
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__, typename T2__, typename T3__>
typename boost::math::tools::promote_args<T0__, T1__, T2__, T3__>::type
relative_diff(const T0__& x, const T1__& y, const T2__& max_,
              const T3__& min_, std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__,
          T2__,
          T3__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 192-192";
    double abs_diff;
    
    current_statement__ = ""gentest_mother1.stan", line 193-193";
    double avg_scale;
    
    current_statement__ = ""gentest_mother1.stan", line 194-194";
    abs_diff = fabs(x Minus y);
    current_statement__ = ""gentest_mother1.stan", line 195-195";
    avg_scale = fabs(x) Plus fabs(y) Divide 2;
    current_statement__ = ""gentest_mother1.stan", line 196-197";
    if (abs_diff Divide avg_scale Greater max_) {
      current_statement__ = ""gentest_mother1.stan", line 197-197";
      reject(""user-specified rejection, difference above "",
      max_,
      "" x:"",
      x,
      "" y:"",
      y);
    } 
    current_statement__ = ""gentest_mother1.stan", line 198-199";
    if (abs_diff Divide avg_scale Less min_) {
      current_statement__ = ""gentest_mother1.stan", line 199-199";
      reject(""user-specified rejection, difference below "",
      min_,
      "" x:"",
      x,
      "" y:"",
      y);
    } 
    current_statement__ = ""gentest_mother1.stan", line 200-200";
    return abs_diff Divide avg_scale;
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

template <typename T0__, typename T1__, typename T2__, typename T3__>
Eigen::Matrix<typename boost::math::tools::promote_args<T0__, T1__>::type, -1, 1>
foo_5(const Eigen::Matrix<T0__, -1, 1>& shared_params,
      const Eigen::Matrix<T1__, -1, 1>& job_params,
      const std::vector<double>& data_r, const std::vector<int>& data_i,
      std::ostream* pstream__) {
  typedef typename boost::math::tools::promote_args<T0__,
          T1__,
          T2__,
          T3__>::type local_scalar_t__;
  typedef local_scalar_t__ fun_return_scalar_t__;
  const static bool propto__ = true;
  (void) propto__;
  local_scalar_t__ DUMMY_VAR__(std::numeric_limits<double>::quiet_NaN());
  (void) DUMMY_VAR__;  // suppress unused var warning
  
  try {
    current_statement__ = ""gentest_mother1.stan", line 205-205";
    return Transpose(make_rowvec(1, 2, 3));
  } catch (const std::exception& e) {
    stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

  }
}

class gentest_mother1_model_model : public prob_grad {

 private:
  double J;
  int K;
  int M;
  int N;
  std::vector<Eigen::Matrix<double, 1, -1>> d_1d_row_vec;
  std::vector<Eigen::Matrix<double, -1, 1>> d_1d_simplex;
  std::vector<Eigen::Matrix<double, -1, 1>> d_1d_vec;
  std::vector<std::vector<std::vector<Eigen::Matrix<double, 1, -1>>>> d_3d_row_vec;
  std::vector<std::vector<std::vector<Eigen::Matrix<double, -1, 1>>>> d_3d_simplex;
  std::vector<std::vector<std::vector<Eigen::Matrix<double, -1, 1>>>> d_3d_vec;
  std::vector<std::vector<Eigen::Matrix<double, -1, -1>>> d_ar_mat;
  Eigen::Matrix<double, -1, -1> d_cfcov_33;
  std::vector<Eigen::Matrix<double, -1, -1>> d_cfcov_33_ar;
  Eigen::Matrix<double, -1, -1> d_cfcov_54;
  std::vector<int> d_int_1d_ar;
  std::vector<std::vector<std::vector<int>>> d_int_3d_ar;
  std::vector<double> d_real_1d_ar;
  std::vector<std::vector<std::vector<double>>> d_real_3d_ar;
  Eigen::Matrix<double, 1, -1> d_row_vec;
  Eigen::Matrix<double, -1, 1> d_simplex;
  Eigen::Matrix<double, -1, 1> d_vec;
 
 public:
  ~gentest_mother1_model_model() { }
  
  static std::string model_name() { return "gentest_mother1_model"; }
  
  gentest_mother1_model(stan::io::var_context& context__,
                        unsigned int random_seed__ = 0,
                        std::ostream* pstream__ = nullptr) : prob_grad(0) {
    typedef double local_scalar_t__;
    boost::ecuyer1988 base_rng__ = 
        stan::services::util::create_rng(random_seed__, 0);
    (void) base_rng__;  // suppress unused var warning
    static const char* function__ = "gentest_mother1_model_model_namespace::gentest_mother1_model";
    (void) function__;  // dummy to suppress unused var warning
    try {
      current_statement__ = ""gentest_mother1.stan", line 214-214";
      vals_r__ = context__.vals_r__("J");
      J = vals_r__;
      
      current_statement__ = ""gentest_mother1.stan", line 211-211";
      vals_i__ = context__.vals_i__("K");
      K = vals_i__;
      
      current_statement__ = ""gentest_mother1.stan", line 210-210";
      vals_i__ = context__.vals_i__("M");
      M = vals_i__;
      
      current_statement__ = ""gentest_mother1.stan", line 209-209";
      vals_i__ = context__.vals_i__("N");
      N = vals_i__;
      
      current_statement__ = ""gentest_mother1.stan", line 221-221";
      vals_r__ = context__.vals_r__("d_1d_row_vec");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++)
        for (size_t i_1__ = 0; i_1__ < N; i_1__++)
          d_1d_row_vec = vals_r__[i_0__][i_1__];
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 225-225";
      vals_r__ = context__.vals_r__("d_1d_simplex");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++)
        for (size_t i_1__ = 0; i_1__ < N; i_1__++)
          d_1d_simplex = vals_r__[i_0__][i_1__];
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 218-218";
      vals_r__ = context__.vals_r__("d_1d_vec");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++)
        for (size_t i_1__ = 0; i_1__ < N; i_1__++)
          d_1d_vec = vals_r__[i_0__][i_1__];
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 222-222";
      vals_r__ = context__.vals_r__("d_3d_row_vec");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < M; i_1__++)
          for (size_t i_2__ = 0; i_2__ < N; i_2__++)
            for (size_t i_3__ = 0; i_3__ < N; i_3__++)
              d_3d_row_vec = vals_r__[i_0__][i_1__][i_2__][i_3__];
              
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 226-226";
      vals_r__ = context__.vals_r__("d_3d_simplex");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < M; i_1__++)
          for (size_t i_2__ = 0; i_2__ < N; i_2__++)
            for (size_t i_3__ = 0; i_3__ < N; i_3__++)
              d_3d_simplex = vals_r__[i_0__][i_1__][i_2__][i_3__];
              
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 219-219";
      vals_r__ = context__.vals_r__("d_3d_vec");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < M; i_1__++)
          for (size_t i_2__ = 0; i_2__ < N; i_2__++)
            for (size_t i_3__ = 0; i_3__ < N; i_3__++)
              d_3d_vec = vals_r__[i_0__][i_1__][i_2__][i_3__];
              
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 223-223";
      vals_r__ = context__.vals_r__("d_ar_mat");
      for (size_t i_0__ = 0; i_0__ < 5; i_0__++)
        for (size_t i_1__ = 0; i_1__ < 4; i_1__++)
          for (size_t i_2__ = 0; i_2__ < 2; i_2__++)
            for (size_t i_3__ = 0; i_3__ < 3; i_3__++)
              d_ar_mat = vals_r__[i_0__][i_1__](i_2__, i_3__);
              
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 228-228";
      vals_r__ = context__.vals_r__("d_cfcov_33");
      for (size_t i_0__ = 0; i_0__ < 3; i_0__++)
        for (size_t i_1__ = 0; i_1__ < 3; i_1__++)
          d_cfcov_33 = vals_r__(i_0__, i_1__);
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 229-229";
      vals_r__ = context__.vals_r__("d_cfcov_33_ar");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < 3; i_1__++)
          for (size_t i_2__ = 0; i_2__ < 3; i_2__++)
            d_cfcov_33_ar = vals_r__[i_0__](i_1__, i_2__);
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 227-227";
      vals_r__ = context__.vals_r__("d_cfcov_54");
      for (size_t i_0__ = 0; i_0__ < 5; i_0__++)
        for (size_t i_1__ = 0; i_1__ < 4; i_1__++)
          d_cfcov_54 = vals_r__(i_0__, i_1__);
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 212-212";
      vals_i__ = context__.vals_i__("d_int_1d_ar");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++)
        d_int_1d_ar = vals_i__[i_0__];
        
      
      current_statement__ = ""gentest_mother1.stan", line 213-213";
      vals_i__ = context__.vals_i__("d_int_3d_ar");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < M; i_1__++)
          for (size_t i_2__ = 0; i_2__ < N; i_2__++)
            d_int_3d_ar = vals_i__[i_0__][i_1__][i_2__];
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 215-215";
      vals_r__ = context__.vals_r__("d_real_1d_ar");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++)
        d_real_1d_ar = vals_r__[i_0__];
        
      
      current_statement__ = ""gentest_mother1.stan", line 216-216";
      vals_r__ = context__.vals_r__("d_real_3d_ar");
      for (size_t i_0__ = 0; i_0__ < K; i_0__++)
        for (size_t i_1__ = 0; i_1__ < M; i_1__++)
          for (size_t i_2__ = 0; i_2__ < N; i_2__++)
            d_real_3d_ar = vals_r__[i_0__][i_1__][i_2__];
            
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 220-220";
      vals_r__ = context__.vals_r__("d_row_vec");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++) d_row_vec = vals_r__[i_0__];
                                                 
      
      current_statement__ = ""gentest_mother1.stan", line 224-224";
      vals_r__ = context__.vals_r__("d_simplex");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++) d_simplex = vals_r__[i_0__];
                                                 
      
      current_statement__ = ""gentest_mother1.stan", line 217-217";
      vals_r__ = context__.vals_r__("d_vec");
      for (size_t i_0__ = 0; i_0__ < N; i_0__++) d_vec = vals_r__[i_0__];
                                                 
      current_statement__ = ""gentest_mother1.stan", line 214-214";
      check_greater_or_equal(function__, J, Minus(2.0));
      current_statement__ = ""gentest_mother1.stan", line 214-214";
      check_less_or_equal(function__, J, 2.0);
      current_statement__ = ""gentest_mother1.stan", line 211-211";
      check_greater_or_equal(function__, K, 0);
      current_statement__ = ""gentest_mother1.stan", line 211-211";
      check_less_or_equal(function__, K, N Times M);
      current_statement__ = ""gentest_mother1.stan", line 210-210";
      check_greater_or_equal(function__, M, 0);
      current_statement__ = ""gentest_mother1.stan", line 209-209";
      check_greater_or_equal(function__, N, 0);
      current_statement__ = ""gentest_mother1.stan", line 225-225";
      for (size_t sym1 = 0; sym1 < N; sym1++)
        check_simplex(function__, d_1d_simplex[sym1]);
      
      current_statement__ = ""gentest_mother1.stan", line 226-226";
      for (size_t sym4 = 0; sym4 < N; sym4++)
        for (size_t sym3 = 0; sym3 < M; sym3++)
          for (size_t sym2 = 0; sym2 < K; sym2++)
            check_simplex(function__, d_3d_simplex[sym2][sym3][sym4]);
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 223-223";
      for (size_t sym6 = 0; sym6 < 4; sym6++)
        for (size_t sym5 = 0; sym5 < 5; sym5++)
          check_greater_or_equal(function__, d_ar_mat[sym5][sym6], 0);
        
      
      current_statement__ = ""gentest_mother1.stan", line 223-223";
      for (size_t sym8 = 0; sym8 < 4; sym8++)
        for (size_t sym7 = 0; sym7 < 5; sym7++)
          check_less_or_equal(function__, d_ar_mat[sym7][sym8], 1);
        
      
      current_statement__ = ""gentest_mother1.stan", line 228-228";
      check_cholesky_factor(function__, d_cfcov_33);
      current_statement__ = ""gentest_mother1.stan", line 229-229";
      for (size_t sym9 = 0; sym9 < K; sym9++)
        check_cholesky_factor(function__, d_cfcov_33_ar[sym9]);
      
      current_statement__ = ""gentest_mother1.stan", line 227-227";
      check_cholesky_factor(function__, d_cfcov_54);
      current_statement__ = ""gentest_mother1.stan", line 212-212";
      for (size_t sym10 = 0; sym10 < N; sym10++)
        check_less_or_equal(function__, d_int_1d_ar[sym10], N);
      
      current_statement__ = ""gentest_mother1.stan", line 213-213";
      for (size_t sym13 = 0; sym13 < N; sym13++)
        for (size_t sym12 = 0; sym12 < M; sym12++)
          for (size_t sym11 = 0; sym11 < K; sym11++)
            check_less_or_equal(function__, d_int_3d_ar[sym11][sym12][sym13],
                                N);
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 224-224";
      check_simplex(function__, d_simplex);
      current_statement__ = ""gentest_mother1.stan", line 237-237";
      for (size_t sym14 = 0; sym14 < N; sym14++)
        check_simplex(function__, td_1d_simplex[sym14]);
      
      current_statement__ = ""gentest_mother1.stan", line 238-238";
      for (size_t sym17 = 0; sym17 < N; sym17++)
        for (size_t sym16 = 0; sym16 < M; sym16++)
          for (size_t sym15 = 0; sym15 < K; sym15++)
            check_simplex(function__, td_3d_simplex[sym15][sym16][sym17]);
          
        
      
      current_statement__ = ""gentest_mother1.stan", line 235-235";
      for (size_t sym19 = 0; sym19 < 4; sym19++)
        for (size_t sym18 = 0; sym18 < 5; sym18++)
          check_greater_or_equal(function__, td_ar_mat[sym18][sym19], 0);
        
      
      current_statement__ = ""gentest_mother1.stan", line 235-235";
      for (size_t sym21 = 0; sym21 < 4; sym21++)
        for (size_t sym20 = 0; sym20 < 5; sym20++)
          check_less_or_equal(function__, td_ar_mat[sym20][sym21], 1);
        
      
      current_statement__ = ""gentest_mother1.stan", line 240-240";
      check_cholesky_factor(function__, td_cfcov_33);
      current_statement__ = ""gentest_mother1.stan", line 239-239";
      check_cholesky_factor(function__, td_cfcov_54);
      current_statement__ = ""gentest_mother1.stan", line 236-236";
      check_simplex(function__, td_simplex);
      current_statement__ = ""gentest_mother1.stan", line 241-246";
      for (size_t i = 1; i < 4; i++)
        {
          current_statement__ = ""gentest_mother1.stan", line 242-245";
          for (size_t j = 1; j < 5; j++)
            {
              current_statement__ = ""gentest_mother1.stan", line 243-243";
              Eigen::Matrix<double, -1, -1> l_mat;
              current_statement__ = ""gentest_mother1.stan", line 243-243";
              l_mat = stan::model::rvalue(d_ar_mat,
                          stan::model::cons_list(stan::model::index_uni(i),
                          stan::model::cons_list(stan::model::index_uni(j),
                          stan::model::nil_index_list())), "d_ar_mat");;
              current_statement__ = ""gentest_mother1.stan", line 244-244";
              print(""ar dim1: "",
              i,
              "" ar dim2: "",
              j,
              "" matrix: "",
              l_mat);
            }
          
        }
      
      {
        current_statement__ = ""gentest_mother1.stan", line 248-248";
        double z;
        
        current_statement__ = ""gentest_mother1.stan", line 249-249";
        Eigen::Matrix<double, 1, -1> vs;
        
        current_statement__ = ""gentest_mother1.stan", line 250-252";
        for (size_t v = 0; v < length(vs); v++)
          {
            current_statement__ = ""gentest_mother1.stan", line 251-251";
            z = 0;
          }
        
      }
    } catch (const std::exception& e) {
      stan::lang::rethrow_located(
      std::runtime_error(std::string(e) + e.what(), current_statement__));
      // Next line prevents compiler griping about no return
      throw std::runtime_error("*** IF YOU SEE THIS, PLEASE REPORT A BUG ***");

    }
  }
  }
  }
  

Warning: deprecated language construct used in file gentest_mother1.stan, line 60, column 21:
   -------------------------------------------------
    58:  
    59:    void unit_normal_lp(real u) {
    60:      increment_log_prob(normal_log(u,0,1));
                              ^
    61:      u ~ uniform(-100,100);
    62:    }
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.


Warning: deprecated language construct used in file gentest_mother1.stan, line 184, column 20:
   -------------------------------------------------
   182:  
   183:    real foo_lp(real x) {
   184:      return x + get_lp();
                             ^
   185:    }
   186:  
   -------------------------------------------------

get_lp() function is deprecated. It will be removed in a future release. Use target() instead.

